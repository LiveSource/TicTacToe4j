[{"filePath":"","fileName":"tictactoe4j_Specification.json","dateModified":1316483912740,"fileAuthor":"alline.oliveira"},{"filePath":"","fileName":".project","dateModified":1296103865055,"fileAuthor":"Alline.Oliveira"},{"filePath":"","fileName":"TicTacToe_Specification.xml","dateModified":1316287168120,"fileAuthor":"alline.oliveira"},{"featureName":"Test","featureDescription":"","priority":"1","fileContent":"Feature: Test\n\n# @Priority 1\n"},{"featureName":"Timer","featureDescription":"Count the time past for the current game.","priority":"5","estimate":"20","status":"StandBy","fileContent":"Feature: Timer\n# Count the time past for the current game.\n\n# @Priority 5\n# @Estimate 20\n# @Status StandBy\n"},{"featureName":"Login","featureDescription":"","priority":"2","fileContent":"Feature: Login\n\n# @Priority 2\n"},{"featureName":"Logout","featureDescription":"Clean the current user information off of the system.","priority":"4","estimate":"5","status":"StandBy","fileContent":"Feature: Logout\n\n# Clean the current user information off of the system.\n# @Priority 4\n# @Estimate 5\n# @Status StandBy\n"},{"filePath":"","fileName":".classpath","dateModified":1296103865055,"fileAuthor":"Alline.Oliveira"},{"filePath":"src","fileName":"log4j.properties","dateModified":1296103865055,"fileAuthor":"Alline.Oliveira"},{"filePath":"src\/tictactoe\/server","fileName":"MovimentJudgment.java","dateModified":1299175446471,"fileAuthor":"Alline.Oliveira","class_package":"tictactoe.server","class_name":"MovimentJudgment","class_description":"Checks if the player movement ran a winning sequence or not.","super_class":"java.lang.Object","class_modifiers":"public","class_tags":["@Requirement"],"class_imports":["tictactoe.shared.GameEntity","tictactoe.shared.Player"],"class_constructors":[{"method_name":"MovimentJudgment","method_modifiers":"public","method_return_type":"","method_parameters":"","method_description":""}],"class_methods":[{"method_name":"checkForWinner","method_modifiers":"public static","method_return_type":"GameEntity","method_parameters":"GameEntity currentGame, int currentMoveRow, int currentMoveColumn","method_description":""},{"method_name":"checkWinnerRow","method_modifiers":"private static","method_return_type":"boolean","method_parameters":"GameEntity currentGame, Player currentPlayer, int currentMoveRow","method_description":""},{"method_name":"checkWinnerColumn","method_modifiers":"private static","method_return_type":"boolean","method_parameters":"GameEntity currentGame, Player currentPlayer, int currentMoveColumn","method_description":""},{"method_name":"checkWinnerDiagonalRight","method_modifiers":"private static","method_return_type":"boolean","method_parameters":"GameEntity currentGame, Player currentPlayer","method_description":""},{"method_name":"checkWinnerDiagonalLeft","method_modifiers":"private static","method_return_type":"boolean","method_parameters":"GameEntity currentGame, Player currentPlayer","method_description":""}],"class_fields":[],"fileContent":"package tictactoe.server;\n\nimport tictactoe.shared.GameEntity;\nimport tictactoe.shared.Player;\n\n\n\n\/** \n * Checks if the player movement ran a winning sequence or not.\n * \n * @Requirement \n *\/\npublic class MovimentJudgment {\n\n\tpublic static GameEntity checkForWinner(GameEntity currentGame,\n\t\t\tint currentMoveRow, int currentMoveColumn) {\n\n\t\tString sequenceWinner = null;\n\n\t\tPlayer currentPlayer = currentGame.getGameMoves()[currentMoveRow][currentMoveColumn];\n\n\t\tif (currentPlayer != null) {\n\n\t\t\tif (checkWinnerRow(currentGame, currentPlayer, currentMoveRow)) {\n\n\t\t\t\tsequenceWinner = GameEntity.SEQUENCE_ROW;\n\n\t\t\t} else if (checkWinnerColumn(currentGame, currentPlayer,\n\t\t\t\t\tcurrentMoveColumn)) {\n\n\t\t\t\tsequenceWinner = GameEntity.SEQUENCE_COLUMN;\n\n\t\t\t} else if (checkWinnerDiagonalRight(currentGame, currentPlayer)) {\n\n\t\t\t\tsequenceWinner = GameEntity.SEQUENCE_DIAGONAL_RIGHT;\n\n\t\t\t} else if (checkWinnerDiagonalLeft(currentGame, currentPlayer)) {\n\n\t\t\t\tsequenceWinner = GameEntity.SEQUENCE_DIAGONAL_LEFT;\n\t\t\t}\n\t\t}\n\n\t\tcurrentGame.setSequenceWinner(sequenceWinner);\n\n\t\treturn currentGame;\n\t}\n\n\tprivate static boolean checkWinnerRow(GameEntity currentGame,\n\t\t\tPlayer currentPlayer, int currentMoveRow) {\n\n\t\tString currentPlayerIcon = currentPlayer.getPlayerSymbol();\n\n\t\tif (currentGame.getGameMoves()[currentMoveRow][0] != null\n\t\t\t\t&& currentGame.getGameMoves()[currentMoveRow][1] != null\n\t\t\t\t&& currentGame.getGameMoves()[currentMoveRow][2] != null\n\t\t\t\t&& currentPlayerIcon\n\t\t\t\t\t\t.equals(currentGame.getGameMoves()[currentMoveRow][0]\n\t\t\t\t\t\t\t\t.getPlayerSymbol())\n\t\t\t\t&& currentPlayerIcon\n\t\t\t\t\t\t.equals(currentGame.getGameMoves()[currentMoveRow][1]\n\t\t\t\t\t\t\t\t.getPlayerSymbol())\n\t\t\t\t&& currentPlayerIcon\n\t\t\t\t\t\t.equals(currentGame.getGameMoves()[currentMoveRow][2]\n\t\t\t\t\t\t\t\t.getPlayerSymbol())) {\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate static boolean checkWinnerColumn(GameEntity currentGame,\n\t\t\tPlayer currentPlayer, int currentMoveColumn) {\n\n\t\tString currentPlayerIcon = currentPlayer.getPlayerSymbol();\n\n\t\tif (currentGame.getGameMoves()[0][currentMoveColumn] != null\n\t\t\t\t&& currentGame.getGameMoves()[1][currentMoveColumn] != null\n\t\t\t\t&& currentGame.getGameMoves()[2][currentMoveColumn] != null\n\t\t\t\t&& currentPlayerIcon\n\t\t\t\t\t\t.equals(currentGame.getGameMoves()[0][currentMoveColumn]\n\t\t\t\t\t\t\t\t.getPlayerSymbol())\n\t\t\t\t&& currentPlayerIcon\n\t\t\t\t\t\t.equals(currentGame.getGameMoves()[1][currentMoveColumn]\n\t\t\t\t\t\t\t\t.getPlayerSymbol())\n\t\t\t\t&& currentPlayerIcon\n\t\t\t\t\t\t.equals(currentGame.getGameMoves()[2][currentMoveColumn]\n\t\t\t\t\t\t\t\t.getPlayerSymbol())) {\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate static boolean checkWinnerDiagonalRight(GameEntity currentGame,\n\t\t\tPlayer currentPlayer) {\n\n\t\tString currentPlayerIcon = currentPlayer.getPlayerSymbol();\n\n\t\tif (currentGame.getGameMoves()[0][2] != null\n\t\t\t\t&& currentGame.getGameMoves()[1][1] != null\n\t\t\t\t&& currentGame.getGameMoves()[2][0] != null\n\t\t\t\t&& currentPlayerIcon.equals(currentGame.getGameMoves()[0][2]\n\t\t\t\t\t\t.getPlayerSymbol())\n\t\t\t\t&& currentPlayerIcon.equals(currentGame.getGameMoves()[1][1]\n\t\t\t\t\t\t.getPlayerSymbol())\n\t\t\t\t&& currentPlayerIcon.equals(currentGame.getGameMoves()[2][0]\n\t\t\t\t\t\t.getPlayerSymbol())) {\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate static boolean checkWinnerDiagonalLeft(GameEntity currentGame,\n\t\t\tPlayer currentPlayer) {\n\n\t\tString currentPlayerIcon = currentPlayer.getPlayerSymbol();\n\n\t\tif (currentGame.getGameMoves()[0][0] != null\n\t\t\t\t&& currentGame.getGameMoves()[1][1] != null\n\t\t\t\t&& currentGame.getGameMoves()[2][2] != null\n\t\t\t\t&& currentPlayerIcon.equals(currentGame.getGameMoves()[0][0]\n\t\t\t\t\t\t.getPlayerSymbol())\n\t\t\t\t&& currentPlayerIcon.equals(currentGame.getGameMoves()[1][1]\n\t\t\t\t\t\t.getPlayerSymbol())\n\t\t\t\t&& currentPlayerIcon.equals(currentGame.getGameMoves()[2][2]\n\t\t\t\t\t\t.getPlayerSymbol())) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\t}\n}\n"},{"filePath":"src\/tictactoe\/server","fileName":"GreetingServiceImpl.java","dateModified":1296103865055,"fileAuthor":"Alline.Oliveira","class_package":"tictactoe.server","class_name":"GreetingServiceImpl","class_description":"The server side implementation of the RPC service.","super_class":"RemoteServiceServlet","class_modifiers":"public","class_tags":["@Architecture"],"class_imports":["tictactoe.client.serverCalls.GreetingService","tictactoe.shared.GameEntity","com.google.gwt.user.server.rpc.RemoteServiceServlet"],"class_constructors":[{"method_name":"GreetingServiceImpl","method_modifiers":"public","method_return_type":"","method_parameters":"","method_description":""}],"class_methods":[{"method_name":"checkForWinner","method_modifiers":"public","method_return_type":"GameEntity","method_parameters":"GameEntity currentGame, int currentMoveRow, int currentMoveColumn","method_description":""}],"class_fields":[],"fileContent":"package tictactoe.server;\n\nimport tictactoe.client.serverCalls.GreetingService;\nimport tictactoe.shared.GameEntity;\n\nimport com.google.gwt.user.server.rpc.RemoteServiceServlet;\n\n\/**\n * The server side implementation of the RPC service.\n * \n * @Architecture\n *\/\n@SuppressWarnings(\"serial\")\npublic class GreetingServiceImpl extends RemoteServiceServlet implements\n\t\tGreetingService {\n\n\t@Override\n\tpublic GameEntity checkForWinner(GameEntity currentGame,\n\t\t\tint currentMoveRow, int currentMoveColumn) {\n\n\t\treturn MovimentJudgment.checkForWinner(currentGame, currentMoveRow,\n\t\t\t\tcurrentMoveColumn);\n\t}\n\n}\n"},{"filePath":"src\/tictactoe\/shared","fileName":"GameEntity.java","dateModified":1309062130906,"fileAuthor":"alline.oliveira","class_package":"tictactoe.shared","class_name":"GameEntity","class_description":"Gather all the information about a particular game.","super_class":"java.lang.Object","class_modifiers":"public","class_tags":["@","@Entity"],"class_imports":["java.io.Serializable","java.util.Date"],"class_constructors":[{"method_name":"GameEntity","method_modifiers":"public","method_return_type":"","method_parameters":"","method_description":""}],"class_methods":[{"method_name":"getDate","method_modifiers":"public","method_return_type":"java.util.Date","method_parameters":"","method_description":""},{"method_name":"setDate","method_modifiers":"public","method_return_type":"void","method_parameters":"Date date","method_description":""},{"method_name":"getGameMoves","method_modifiers":"public","method_return_type":"Player[][]","method_parameters":"","method_description":""},{"method_name":"setGameMoves","method_modifiers":"public","method_return_type":"void","method_parameters":"Player gameMoves","method_description":""},{"method_name":"getCurrentPlayer","method_modifiers":"public","method_return_type":"Player","method_parameters":"","method_description":""},{"method_name":"setCurrentPlayer","method_modifiers":"public","method_return_type":"void","method_parameters":"Player currentPlayer","method_description":""},{"method_name":"getSequenceWinner","method_modifiers":"public","method_return_type":"java.lang.String","method_parameters":"","method_description":""},{"method_name":"setSequenceWinner","method_modifiers":"public","method_return_type":"void","method_parameters":"String sequenceWinner","method_description":""}],"class_fields":[{"field_name":"SEQUENCE_ROW","field_type":"java.lang.String"},{"field_name":"SEQUENCE_COLUMN","field_type":"java.lang.String"},{"field_name":"SEQUENCE_DIAGONAL_RIGHT","field_type":"java.lang.String"},{"field_name":"SEQUENCE_DIAGONAL_LEFT","field_type":"java.lang.String"},{"field_name":"date","field_type":"java.util.Date"},{"field_name":"gameMoves","field_type":"Player[][]"},{"field_name":"currentPlayer","field_type":"Player"},{"field_name":"sequenceWinner","field_type":"java.lang.String"}],"fileContent":"package tictactoe.shared;\n\nimport java.io.Serializable;\nimport java.util.Date;\n\n\n\n\/** \n * Gather all the information about a particular game.\n * \n * @\n * @Entity \n *\/\npublic class GameEntity implements Serializable {\n\n\tpublic static final String SEQUENCE_ROW = \"row\";\n\tpublic static final String SEQUENCE_COLUMN = \"column\";\n\tpublic static final String SEQUENCE_DIAGONAL_RIGHT = \"diagonalRight\";\n\tpublic static final String SEQUENCE_DIAGONAL_LEFT = \"diagonalLeft\";\n\n\tprivate Date date;\n\n\tprivate Player[][] gameMoves;\n\n\tprivate Player currentPlayer;\n\n\tprivate String sequenceWinner;\n\n\tpublic Date getDate() {\n\t\treturn date;\n\t}\n\n\tpublic void setDate(Date date) {\n\t\tthis.date = date;\n\t}\n\n\tpublic Player[][] getGameMoves() {\n\t\treturn gameMoves;\n\t}\n\n\tpublic void setGameMoves(Player[][] gameMoves) {\n\t\tthis.gameMoves = gameMoves;\n\t}\n\n\tpublic Player getCurrentPlayer() {\n\t\treturn currentPlayer;\n\t}\n\n\tpublic void setCurrentPlayer(Player currentPlayer) {\n\t\tthis.currentPlayer = currentPlayer;\n\t}\n\n\tpublic String getSequenceWinner() {\n\t\treturn sequenceWinner;\n\t}\n\n\tpublic void setSequenceWinner(String sequenceWinner) {\n\t\tthis.sequenceWinner = sequenceWinner;\n\t}\n\n}\n"},{"filePath":"src\/tictactoe\/shared","fileName":"Player.java","dateModified":1299175446471,"fileAuthor":"Alline.Oliveira","class_package":"tictactoe.shared","class_name":"Player","class_description":"Information about each player of the game.","super_class":"java.lang.Object","class_modifiers":"public","class_tags":["@Entity"],"class_imports":["java.io.Serializable"],"class_constructors":[{"method_name":"Player","method_modifiers":"public","method_return_type":"","method_parameters":"","method_description":""}],"class_methods":[{"method_name":"getName","method_modifiers":"public","method_return_type":"java.lang.String","method_parameters":"","method_description":""},{"method_name":"setName","method_modifiers":"public","method_return_type":"void","method_parameters":"String name","method_description":""},{"method_name":"getEmail","method_modifiers":"public","method_return_type":"java.lang.String","method_parameters":"","method_description":""},{"method_name":"setEmail","method_modifiers":"public","method_return_type":"void","method_parameters":"String email","method_description":""},{"method_name":"getPlayerSymbol","method_modifiers":"public","method_return_type":"java.lang.String","method_parameters":"","method_description":""},{"method_name":"setPlayerSymbol","method_modifiers":"public","method_return_type":"void","method_parameters":"String playerSymbol","method_description":""}],"class_fields":[{"field_name":"PlayerSymbol_X","field_type":"java.lang.String"},{"field_name":"PlayerSymbol_O","field_type":"java.lang.String"},{"field_name":"name","field_type":"java.lang.String"},{"field_name":"email","field_type":"java.lang.String"},{"field_name":"playerSymbol","field_type":"java.lang.String"}],"fileContent":"package tictactoe.shared;\n\nimport java.io.Serializable;\n\n\/**\n * Information about each player of the game.\n * \n * @Entity\n *\/\npublic class Player implements Serializable {\n\n\tpublic static final String PlayerSymbol_X = \"X\";\n\tpublic static final String PlayerSymbol_O = \"O\";\n\n\tprivate String name;\n\n\tprivate String email;\n\n\tprivate String playerSymbol;\n\n\tpublic String getName() {\n\t\treturn name;\n\t}\n\n\tpublic void setName(String name) {\n\t\tthis.name = name;\n\t}\n\n\tpublic String getEmail() {\n\t\treturn email;\n\t}\n\n\tpublic void setEmail(String email) {\n\t\tthis.email = email;\n\t}\n\n\tpublic String getPlayerSymbol() {\n\t\treturn playerSymbol;\n\t}\n\n\tpublic void setPlayerSymbol(String playerSymbol) {\n\t\tthis.playerSymbol = playerSymbol;\n\t}\n\n}\n"},{"filePath":"src\/tictactoe\/authentication\/client","fileName":"Login.java","dateModified":1308853214056,"fileAuthor":"alline.oliveira","class_package":"tictactoe.authentication.client","class_name":"Login","class_description":"Form to identify the name and the password of the player.","super_class":"java.lang.Object","class_modifiers":"public","class_tags":["@ToDo","@Feature"],"class_imports":[],"class_constructors":[{"method_name":"Login","method_modifiers":"public","method_return_type":"","method_parameters":"","method_description":""}],"class_methods":[],"class_fields":[],"fileContent":"package tictactoe.authentication.client;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\/** \n * Form to identify the name and the password of the player.\n * \n * @ToDo\n * @Feature \n *\/\npublic class Login {\n\n\t\/\/ public Login(Player user) {\n\n\t\/\/ Window.Location.assign(user.getLoginUrl());\n\n\t\/\/ }\n}"},{"filePath":"src\/tictactoe\/authentication\/client","fileName":"Logout.java","dateModified":1304617371228,"fileAuthor":"alline.oliveira","class_package":"tictactoe.authentication.client","class_name":"Logout","class_description":"Link to a safe exit from the game.","super_class":"Anchor","class_modifiers":"public","class_tags":["@ToDo","@Feature"],"class_imports":["com.google.gwt.user.client.ui.Anchor"],"class_constructors":[{"method_name":"Logout","method_modifiers":"public","method_return_type":"","method_parameters":"","method_description":""}],"class_methods":[],"class_fields":[],"fileContent":"package tictactoe.authentication.client;\n\nimport com.google.gwt.user.client.ui.Anchor;\n\n\n\n\n\n\n\n\n\n\/** \n * Link to a safe exit from the game.\n * \n * @ToDo\n * @Feature \n *\/\npublic class Logout extends Anchor {\n\n\t\/\/ public Logout(Player player) {\n\n\t\/\/ this.setText(\"Log out\");\n\n\t\/\/ this.setHref(player.getLogoutUrl());\n\n\t\/\/ }\n}"},{"filePath":"src\/tictactoe\/authentication","fileName":"Authentication.gwt.xml","dateModified":1296104562132,"fileAuthor":"Alline.Oliveira"},{"filePath":"src\/tictactoe\/client\/serverCalls","fileName":"GreetingServiceAsync.java","dateModified":1296103865055,"fileAuthor":"Alline.Oliveira","class_package":"tictactoe.client.serverCalls","class_name":"GreetingServiceAsync","class_description":"The async counterpart of <code>GreetingService<\/code>.","super_class":"","class_modifiers":"public interface","class_tags":["@Architecture"],"class_imports":["tictactoe.shared.GameEntity","com.google.gwt.user.client.rpc.AsyncCallback"],"class_constructors":[],"class_methods":[{"method_name":"checkForWinner","method_modifiers":"public","method_return_type":"void","method_parameters":"GameEntity currentGame, int currentMoveRow, int currentMoveColumn, <any> callback","method_description":""}],"class_fields":[],"fileContent":"package tictactoe.client.serverCalls;\n\nimport tictactoe.shared.GameEntity;\n\nimport com.google.gwt.user.client.rpc.AsyncCallback;\n\n\/**\n * The async counterpart of <code>GreetingService<\/code>.\n * \n * @Architecture\n *\/\npublic interface GreetingServiceAsync {\n\n\tvoid checkForWinner(GameEntity currentGame, int currentMoveRow,\n\t\t\tint currentMoveColumn, AsyncCallback<GameEntity> callback);\n}\n"},{"filePath":"src\/tictactoe\/client\/serverCalls","fileName":"GreetingService.java","dateModified":1296103865055,"fileAuthor":"Alline.Oliveira","class_package":"tictactoe.client.serverCalls","class_name":"GreetingService","class_description":"The client side stub for the RPC service.","super_class":"","class_modifiers":"public interface","class_tags":["@Architecture"],"class_imports":["tictactoe.shared.GameEntity","com.google.gwt.user.client.rpc.RemoteService","com.google.gwt.user.client.rpc.RemoteServiceRelativePath"],"class_constructors":[],"class_methods":[{"method_name":"checkForWinner","method_modifiers":"public","method_return_type":"GameEntity","method_parameters":"GameEntity currentGame, int currentMoveRow, int currentMoveColumn","method_description":""}],"class_fields":[],"fileContent":"package tictactoe.client.serverCalls;\n\nimport tictactoe.shared.GameEntity;\n\nimport com.google.gwt.user.client.rpc.RemoteService;\nimport com.google.gwt.user.client.rpc.RemoteServiceRelativePath;\n\n\/**\n * The client side stub for the RPC service.\n * \n * @Architecture\n *\/\n@RemoteServiceRelativePath(\"greet\")\npublic interface GreetingService extends RemoteService {\n\n\tGameEntity checkForWinner(GameEntity currentGame, int currentMoveRow,\n\t\t\tint currentMoveColumn);\n}\n"},{"filePath":"src\/tictactoe\/client\/serverCalls","fileName":"CheckWinner.java","dateModified":1299175446471,"fileAuthor":"Alline.Oliveira","class_package":"tictactoe.client.serverCalls","class_name":"CheckWinner","class_description":"","super_class":"java.lang.Object","class_modifiers":"public","class_tags":[],"class_imports":["tictactoe.client.GlobalVariables","tictactoe.client.userInterface.PlayerMove","tictactoe.client.userInterface.WinningSequence","tictactoe.shared.GameEntity","com.google.gwt.core.client.GWT","com.google.gwt.user.client.Window","com.google.gwt.user.client.rpc.AsyncCallback"],"class_constructors":[{"method_name":"CheckWinner","method_modifiers":"public","method_return_type":"","method_parameters":"","method_description":""}],"class_methods":[{"method_name":"checkForWinner","method_modifiers":"public static","method_return_type":"void","method_parameters":"GameEntity currentGame, int currentMoveRow, int currentMoveColumn","method_description":""}],"class_fields":[{"field_name":"greetingService","field_type":"GreetingServiceAsync"}],"fileContent":"package tictactoe.client.serverCalls;\n\nimport tictactoe.client.GlobalVariables;\nimport tictactoe.client.userInterface.PlayerMove;\nimport tictactoe.client.userInterface.WinningSequence;\nimport tictactoe.shared.GameEntity;\n\nimport com.google.gwt.core.client.GWT;\nimport com.google.gwt.user.client.Window;\nimport com.google.gwt.user.client.rpc.AsyncCallback;\n\npublic class CheckWinner {\n\n\t\/**\n\t * Create a remote service proxy to talk to the server-side Greeting\n\t * service.\n\t *\/\n\tprivate static final GreetingServiceAsync greetingService = GWT\n\t\t\t.create(GreetingService.class);\n\n\tpublic static void checkForWinner(GameEntity currentGame,\n\t\t\tfinal int currentMoveRow, final int currentMoveColumn) {\n\n\t\tgreetingService.checkForWinner(currentGame, currentMoveRow,\n\t\t\t\tcurrentMoveColumn, new AsyncCallback<GameEntity>() {\n\n\t\t\t\t\tpublic void onSuccess(GameEntity gameReturned) {\n\n\t\t\t\t\t\tif (gameReturned.getSequenceWinner() != null) {\n\n\t\t\t\t\t\t\tGlobalVariables.currentGameStatus\n\t\t\t\t\t\t\t\t\t.setSequenceWinner(gameReturned\n\t\t\t\t\t\t\t\t\t\t\t.getSequenceWinner());\n\n\t\t\t\t\t\t\tWinningSequence.showWinner(currentMoveRow,\n\t\t\t\t\t\t\t\t\tcurrentMoveColumn);\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tPlayerMove.toggleCurrentPlayer();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tpublic void onFailure(Throwable caught) {\n\n\t\t\t\t\t\tWindow.alert(caught.toString());\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t}\n\n}\n"},{"filePath":"src\/tictactoe\/client","fileName":"GwtEntryPoint.java","dateModified":1299177532675,"fileAuthor":"Alline.Oliveira","class_package":"tictactoe.client","class_name":"GwtEntryPoint","class_description":"Anchor class to init the system by the Google Web Toolkit (EntryPoint).","super_class":"java.lang.Object","class_modifiers":"public","class_tags":["@Architecture"],"class_imports":["com.google.gwt.core.client.EntryPoint"],"class_constructors":[{"method_name":"GwtEntryPoint","method_modifiers":"public","method_return_type":"","method_parameters":"","method_description":""}],"class_methods":[{"method_name":"onModuleLoad","method_modifiers":"public","method_return_type":"void","method_parameters":"","method_description":""}],"class_fields":[],"fileContent":"package tictactoe.client;\r\n\r\nimport com.google.gwt.core.client.EntryPoint;\r\n\r\n\/**\r\n * Anchor class to init the system by the Google Web Toolkit (EntryPoint).\r\n * \r\n * @Architecture\r\n *\/\r\npublic class GwtEntryPoint implements EntryPoint {\r\n\r\n\tpublic void onModuleLoad() {\r\n\r\n\t\tnew GameInitialization();\r\n\r\n\t\tnew HelpInitialization();\r\n\t}\r\n}\r\n"},{"filePath":"src\/tictactoe\/client\/userInterface","fileName":"WinningSequence.java","dateModified":1308776048702,"fileAuthor":"Alline.Oliveira","class_package":"tictactoe.client.userInterface","class_name":"WinningSequence","class_description":"If there is three consecutive marks in a horizontal, vertical, or diagonal\n series, the current Player wins the game, the system highlights the winning\n sequence and the game is over.","super_class":"java.lang.Object","class_modifiers":"public","class_tags":["@Feature"],"class_imports":["helpagile.client.exportation.HelpHint","tictactoe.client.GlobalVariables","tictactoe.shared.GameEntity"],"class_constructors":[{"method_name":"WinningSequence","method_modifiers":"public","method_return_type":"","method_parameters":"","method_description":""}],"class_methods":[{"method_name":"showWinner","method_modifiers":"public static","method_return_type":"void","method_parameters":"int currentMoveRow, int currentMoveColumn","method_description":""}],"class_fields":[],"fileContent":"package tictactoe.client.userInterface;\n\nimport helpagile.client.exportation.HelpHint;\nimport tictactoe.client.GlobalVariables;\nimport tictactoe.shared.GameEntity;\n\n\/**\n * If there is three consecutive marks in a horizontal, vertical, or diagonal\n * series, the current Player wins the game, the system highlights the winning\n * sequence and the game is over.\n * \n * @Feature\n *\/\npublic class WinningSequence {\n\n\tpublic static void showWinner(int currentMoveRow, int currentMoveColumn) {\n\n\t\tString marker = \"<font size=7 color=\\\"red\\\"><b>\"\n\t\t\t\t+ GlobalVariables.currentGameStatus.getCurrentPlayer()\n\t\t\t\t\t\t.getPlayerSymbol() + \"<\/b><\/font>\";\n\n\t\tif (GlobalVariables.currentGameStatus.getSequenceWinner().equals(\n\t\t\t\tGameEntity.SEQUENCE_ROW)) {\n\n\t\t\tGameBoard.gameGrid.setHTML(currentMoveRow, 0, marker);\n\t\t\tGameBoard.gameGrid.setHTML(currentMoveRow, 1, marker);\n\t\t\tGameBoard.gameGrid.setHTML(currentMoveRow, 2, marker);\n\n\t\t} else if (GlobalVariables.currentGameStatus.getSequenceWinner()\n\t\t\t\t.equals(GameEntity.SEQUENCE_COLUMN)) {\n\n\t\t\tGameBoard.gameGrid.setHTML(0, currentMoveColumn, marker);\n\t\t\tGameBoard.gameGrid.setHTML(1, currentMoveColumn, marker);\n\t\t\tGameBoard.gameGrid.setHTML(2, currentMoveColumn, marker);\n\n\t\t} else if (GlobalVariables.currentGameStatus.getSequenceWinner()\n\t\t\t\t.equals(GameEntity.SEQUENCE_DIAGONAL_RIGHT)) {\n\n\t\t\tGameBoard.gameGrid.setHTML(0, 2, marker);\n\t\t\tGameBoard.gameGrid.setHTML(1, 1, marker);\n\t\t\tGameBoard.gameGrid.setHTML(2, 0, marker);\n\n\t\t} else if (GlobalVariables.currentGameStatus.getSequenceWinner()\n\t\t\t\t.equals(GameEntity.SEQUENCE_DIAGONAL_LEFT)) {\n\n\t\t\tGameBoard.gameGrid.setHTML(0, 0, marker);\n\t\t\tGameBoard.gameGrid.setHTML(1, 1, marker);\n\t\t\tGameBoard.gameGrid.setHTML(2, 2, marker);\n\t\t}\n\n\t\tGameBoard.gameGrid.addClickHandler(HelpHint.getClickHandler(\n\t\t\t\t\"tictactoe.client.userInterface.WinningSequence\", null,\n\t\t\t\t\"250px\", \"en\"));\n\t}\n\n}\n"},{"filePath":"src\/tictactoe\/client\/userInterface","fileName":"GameGrid.java","dateModified":1304619023688,"fileAuthor":"alline.oliveira","class_package":"tictactoe.client.userInterface","class_name":"GameGrid","class_description":"A grid of 3 x 3 cells in which the players insert marks to indicate their desired movements.","super_class":"Grid","class_modifiers":"public","class_tags":["@Feature"],"class_imports":["helpagile.client.exportation.HelpHint","com.google.gwt.event.dom.client.ClickEvent","com.google.gwt.event.dom.client.ClickHandler","com.google.gwt.user.client.ui.Grid","com.google.gwt.user.client.ui.HasHorizontalAlignment","com.google.gwt.user.client.ui.HasVerticalAlignment"],"class_constructors":[{"method_name":"GameGrid","method_modifiers":"public","method_return_type":"","method_parameters":"","method_description":""}],"class_methods":[{"method_name":"makeMove","method_modifiers":"private","method_return_type":"void","method_parameters":"Cell cell","method_description":""},{"method_name":"formatGridCells","method_modifiers":"private","method_return_type":"void","method_parameters":"","method_description":""}],"class_fields":[],"fileContent":"package tictactoe.client.userInterface;\n\nimport helpagile.client.exportation.HelpHint;\n\nimport com.google.gwt.event.dom.client.ClickEvent;\nimport com.google.gwt.event.dom.client.ClickHandler;\nimport com.google.gwt.user.client.ui.Grid;\nimport com.google.gwt.user.client.ui.HasHorizontalAlignment;\nimport com.google.gwt.user.client.ui.HasVerticalAlignment;\n\n\n\n\n\n\n\n\n\n\n\n\/** \n * A grid of 3 x 3 cells in which the players insert marks to indicate their desired movements.\n * \n * @Feature \n *\/\npublic class GameGrid extends Grid {\n\n\tpublic GameGrid() {\n\n\t\tsuper(3, 3);\n\n\t\tthis.setBorderWidth(1);\n\t\tthis.setSize(\"400px\", \"400px\");\n\n\t\tformatGridCells();\n\n\t\tthis.addClickHandler(new ClickHandler() {\n\n\t\t\t@Override\n\t\t\tpublic void onClick(ClickEvent event) {\n\n\t\t\t\tCell cell = getCellForEvent(event);\n\n\t\t\t\tmakeMove(cell);\n\n\t\t\t}\n\t\t});\n\n\t\tthis.setTitle(HelpHint.getHelpHint(this.getClass()));\n\t}\n\n\tprivate void makeMove(Cell cell) {\n\t\tPlayerMove.makeMove(this, cell);\n\n\t}\n\n\tprivate void formatGridCells() {\n\n\t\tCellFormatter formatter = new CellFormatter();\n\n\t\tfor (int row = 0; row < 3; row++) {\n\n\t\t\tfor (int column = 0; column < 3; column++) {\n\n\t\t\t\tformatter.setWidth(row, column, \"33%\");\n\t\t\t\tformatter.setHeight(row, column, \"33%\");\n\n\t\t\t\tformatter.setHorizontalAlignment(row, column,\n\t\t\t\t\t\tHasHorizontalAlignment.ALIGN_CENTER);\n\t\t\t\tformatter.setVerticalAlignment(row, column,\n\t\t\t\t\t\tHasVerticalAlignment.ALIGN_MIDDLE);\n\n\t\t\t\tthis.setCellFormatter(formatter);\n\t\t\t}\n\t\t}\n\t}\n}\n"},{"filePath":"src\/tictactoe\/client\/userInterface","fileName":"PlayerMove.java","dateModified":1308770224414,"fileAuthor":"Alline.Oliveira","class_package":"tictactoe.client.userInterface","class_name":"PlayerMove","class_description":"Performs a move in the game.","super_class":"java.lang.Object","class_modifiers":"public","class_tags":["@Feature"],"class_imports":["tictactoe.client.GlobalVariables","tictactoe.client.serverCalls.CheckWinner","tictactoe.shared.Player","com.google.gwt.user.client.ui.HTMLTable.Cell"],"class_constructors":[{"method_name":"PlayerMove","method_modifiers":"public","method_return_type":"","method_parameters":"","method_description":""}],"class_methods":[{"method_name":"makeMove","method_modifiers":"public static","method_return_type":"void","method_parameters":"GameGrid gameGrid, Cell selectedCell","method_description":"When the player clicks in a cell, the game draws an O or a X on the game\n grid depending on which player's turn it is."},{"method_name":"isCellEmpty","method_modifiers":"private static","method_return_type":"boolean","method_parameters":"GameGrid gameGrid, Cell cell","method_description":"The Player can select a cell only if it wasn't selected yet."},{"method_name":"showPlayerSymbol","method_modifiers":"private static","method_return_type":"java.lang.String","method_parameters":"String playerSymbol","method_description":"Shows the right player symbol for the current player in the grid cell."},{"method_name":"toggleCurrentPlayer","method_modifiers":"public static","method_return_type":"void","method_parameters":"","method_description":""}],"class_fields":[],"fileContent":"package tictactoe.client.userInterface;\n\nimport tictactoe.client.GlobalVariables;\nimport tictactoe.client.serverCalls.CheckWinner;\nimport tictactoe.shared.Player;\n\nimport com.google.gwt.user.client.ui.HTMLTable.Cell;\n\n\/**\n * Performs a move in the game.\n * \n * @Feature\n *\/\npublic class PlayerMove {\n\n\t\/**\n\t * When the player clicks in a cell, the game draws an O or a X on the game\n\t * grid depending on which player's turn it is.\n\t *\/\n\tpublic static void makeMove(GameGrid gameGrid, Cell selectedCell) {\n\n\t\tif (!GlobalVariables.waitingMoveFlag\n\t\t\t\t&& GlobalVariables.currentGameStatus.getSequenceWinner() == null\n\t\t\t\t&& isCellEmpty(gameGrid, selectedCell)) {\n\n\t\t\tGlobalVariables.waitingMoveFlag = true;\n\n\t\t\tString marker = showPlayerSymbol(GlobalVariables.currentGameStatus\n\t\t\t\t\t.getCurrentPlayer().getPlayerSymbol());\n\n\t\t\tgameGrid.setHTML(selectedCell.getRowIndex(),\n\t\t\t\t\tselectedCell.getCellIndex(), marker);\n\n\t\t\tGlobalVariables.currentGameStatus.getGameMoves()[selectedCell\n\t\t\t\t\t.getRowIndex()][selectedCell.getCellIndex()] = GlobalVariables.currentGameStatus\n\t\t\t\t\t.getCurrentPlayer();\n\n\t\t\tCheckWinner.checkForWinner(GlobalVariables.currentGameStatus,\n\t\t\t\t\tselectedCell.getRowIndex(), selectedCell.getCellIndex());\n\t\t}\n\t}\n\n\t\/**\n\t * The Player can select a cell only if it wasn't selected yet.\n\t *\/\n\tprivate static boolean isCellEmpty(GameGrid gameGrid, Cell cell) {\n\n\t\tPlayer cellPlayer = GlobalVariables.currentGameStatus.getGameMoves()[cell\n\t\t\t\t.getRowIndex()][cell.getCellIndex()];\n\n\t\treturn (cellPlayer == null);\n\t}\n\n\t\/**\n\t * Shows the right player symbol for the current player in the grid cell.\n\t *\/\n\tprivate static String showPlayerSymbol(String playerSymbol) {\n\n\t\tString symbolColor = \"darkgreen\";\n\t\tif (playerSymbol.equals(GlobalVariables.playerO.getPlayerSymbol())) {\n\n\t\t\tsymbolColor = \"darkblue\";\n\t\t}\n\n\t\tString symbol = \"<font size=6 color=\" + symbolColor + \"><b>\"\n\t\t\t\t+ playerSymbol + \"<\/b><\/font>\";\n\n\t\treturn symbol;\n\t}\n\n\tpublic static void toggleCurrentPlayer() {\n\n\t\tif (GlobalVariables.currentGameStatus.getCurrentPlayer()\n\t\t\t\t.getPlayerSymbol().equals(Player.PlayerSymbol_X))\n\t\t\tGlobalVariables.currentGameStatus\n\t\t\t\t\t.setCurrentPlayer(GlobalVariables.playerO);\n\n\t\telse if (GlobalVariables.currentGameStatus.getCurrentPlayer()\n\t\t\t\t.getPlayerSymbol().equals(Player.PlayerSymbol_O))\n\t\t\tGlobalVariables.currentGameStatus\n\t\t\t\t\t.setCurrentPlayer(GlobalVariables.playerX);\n\n\t\tGlobalVariables.waitingMoveFlag = false;\n\t}\n\n}\n"},{"filePath":"src\/tictactoe\/client\/userInterface","fileName":"Timer.java","dateModified":1304619035563,"fileAuthor":"alline.oliveira","class_package":"tictactoe.client.userInterface","class_name":"Timer","class_description":"Counts the time passed since the current game started.","super_class":"java.lang.Object","class_modifiers":"public","class_tags":["@InProgress","@Feature"],"class_imports":[],"class_constructors":[{"method_name":"Timer","method_modifiers":"public","method_return_type":"","method_parameters":"","method_description":""}],"class_methods":[],"class_fields":[],"fileContent":"package tictactoe.client.userInterface;\n\n\n\n\n\n\/** \n * Counts the time passed since the current game started.\n * \n * @InProgress\n * @Feature \n *\/\npublic class Timer {\n\n}\n"},{"filePath":"src\/tictactoe\/client\/userInterface","fileName":"GameBoard.java","dateModified":1308776048702,"fileAuthor":"Alline.Oliveira","class_package":"tictactoe.client.userInterface","class_name":"GameBoard","class_description":"Accommodates the game grid and also some options such as a restart button,\n help, game score, game status, ... The game starts showing the game board in\n the web page.","super_class":"VerticalPanel","class_modifiers":"public","class_tags":["@Feature"],"class_imports":["helpagile.client.exportation.HelpHint","com.google.gwt.user.client.ui.HasHorizontalAlignment","com.google.gwt.user.client.ui.HasVerticalAlignment","com.google.gwt.user.client.ui.VerticalPanel"],"class_constructors":[{"method_name":"GameBoard","method_modifiers":"public","method_return_type":"","method_parameters":"","method_description":""}],"class_methods":[],"class_fields":[{"field_name":"gameGrid","field_type":"GameGrid"}],"fileContent":"package tictactoe.client.userInterface;\n\nimport helpagile.client.exportation.HelpHint;\n\nimport com.google.gwt.user.client.ui.HasHorizontalAlignment;\nimport com.google.gwt.user.client.ui.HasVerticalAlignment;\nimport com.google.gwt.user.client.ui.VerticalPanel;\n\n\/**\n * Accommodates the game grid and also some options such as a restart button,\n * help, game score, game status, ... The game starts showing the game board in\n * the web page.\n * \n * @Feature\n *\/\npublic class GameBoard extends VerticalPanel {\n\n\tpublic static GameGrid gameGrid = new GameGrid();\n\n\tpublic GameBoard() {\n\n\t\tthis.setSize(\"100%\", \"100%\");\n\n\t\tthis.setVerticalAlignment(HasVerticalAlignment.ALIGN_MIDDLE);\n\t\tthis.setHorizontalAlignment(HasHorizontalAlignment.ALIGN_CENTER);\n\n\t\tthis.add(gameGrid);\n\n\t\tthis.setTitle(HelpHint.getHelpHint(this.getClass()));\n\t}\n\n}\n"},{"filePath":"src\/tictactoe\/client","fileName":"GameInitialization.java","dateModified":1299175446471,"fileAuthor":"Alline.Oliveira","class_package":"tictactoe.client","class_name":"GameInitialization","class_description":"","super_class":"java.lang.Object","class_modifiers":"public","class_tags":[],"class_imports":["tictactoe.shared.Player"],"class_constructors":[{"method_name":"GameInitialization","method_modifiers":"public","method_return_type":"","method_parameters":"","method_description":""}],"class_methods":[],"class_fields":[],"fileContent":"package tictactoe.client;\r\n\r\nimport tictactoe.shared.Player;\r\n\r\npublic class GameInitialization {\r\n\r\n\tpublic GameInitialization() {\r\n\r\n\t\tGlobalVariables.playerO.setPlayerSymbol(Player.PlayerSymbol_O);\r\n\r\n\t\tGlobalVariables.playerX.setPlayerSymbol(Player.PlayerSymbol_X);\r\n\r\n\t\tGlobalVariables.currentGameStatus\r\n\t\t\t\t.setCurrentPlayer(GlobalVariables.playerX);\r\n\r\n\t\tGlobalVariables.currentGameStatus.setGameMoves(new Player[3][3]);\r\n\t}\r\n}\r\n"},{"filePath":"src\/tictactoe\/client","fileName":"HelpInitialization.java","dateModified":1299175446471,"fileAuthor":"Alline.Oliveira","class_package":"tictactoe.client","class_name":"HelpInitialization","class_description":"Loading the contents of the help system.","super_class":"java.lang.Object","class_modifiers":"public","class_tags":["@Architecture"],"class_imports":["helpagile.client.exportation.HelpWindow","helpagile.client.utilities.ConvertSpecificationXML","tictactoe.client.userInterface.GameBoard","com.google.gwt.http.client.Request","com.google.gwt.http.client.RequestCallback","com.google.gwt.http.client.Response","com.google.gwt.user.client.Window","com.google.gwt.user.client.ui.RootPanel"],"class_constructors":[{"method_name":"HelpInitialization","method_modifiers":"public","method_return_type":"","method_parameters":"","method_description":""}],"class_methods":[],"class_fields":[],"fileContent":"package tictactoe.client;\r\n\r\nimport helpagile.client.exportation.HelpWindow;\r\nimport helpagile.client.utilities.ConvertSpecificationXML;\r\nimport tictactoe.client.userInterface.GameBoard;\r\n\r\nimport com.google.gwt.http.client.Request;\r\nimport com.google.gwt.http.client.RequestCallback;\r\nimport com.google.gwt.http.client.Response;\r\nimport com.google.gwt.user.client.Window;\r\nimport com.google.gwt.user.client.ui.RootPanel;\r\n\r\n\/**\r\n * Loading the contents of the help system.\r\n * \r\n * @Architecture\r\n *\/\r\npublic class HelpInitialization {\r\n\r\n\tpublic HelpInitialization() {\r\n\r\n\t\tRequestCallback requestCallback = new RequestCallback() {\r\n\r\n\t\t\tpublic void onResponseReceived(Request request, Response response) {\r\n\r\n\t\t\t\tConvertSpecificationXML.convertHelpEntries(response.getText());\r\n\r\n\t\t\t\tRootPanel.get(\"gameBoardHtmlTagId\").add(\r\n\t\t\t\t\t\tHelpWindow.helpIcon(\"TicTacToe\", \"en\"));\r\n\r\n\t\t\t\tRootPanel.get(\"gameBoardHtmlTagId\").add(new GameBoard());\r\n\t\t\t}\r\n\r\n\t\t\tpublic void onError(Request request, Throwable exception) {\r\n\r\n\t\t\t\tWindow.alert(\"Failed to send the message: \"\r\n\t\t\t\t\t\t+ exception.getMessage());\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\thelpagile.client.HelpInitialization.initHelp(\"TicTacToe\", null,\r\n\t\t\t\trequestCallback);\r\n\r\n\t}\r\n}\r\n"},{"filePath":"src\/tictactoe\/client","fileName":"GlobalVariables.java","dateModified":1299175446471,"fileAuthor":"Alline.Oliveira","class_package":"tictactoe.client","class_name":"GlobalVariables","class_description":"","super_class":"java.lang.Object","class_modifiers":"public","class_tags":[],"class_imports":["tictactoe.shared.GameEntity","tictactoe.shared.Player"],"class_constructors":[{"method_name":"GlobalVariables","method_modifiers":"public","method_return_type":"","method_parameters":"","method_description":""}],"class_methods":[],"class_fields":[{"field_name":"currentGameStatus","field_type":"GameEntity"},{"field_name":"waitingMoveFlag","field_type":"boolean"},{"field_name":"playerO","field_type":"Player"},{"field_name":"playerX","field_type":"Player"}],"fileContent":"package tictactoe.client;\r\n\r\nimport tictactoe.shared.GameEntity;\r\nimport tictactoe.shared.Player;\r\n\r\npublic class GlobalVariables {\r\n\r\n\tpublic static GameEntity currentGameStatus = new GameEntity();\r\n\r\n\tpublic static boolean waitingMoveFlag = false;\r\n\r\n\tpublic static Player playerO = new Player();\r\n\r\n\tpublic static Player playerX = new Player();\r\n\r\n}\r\n"},{"filePath":"src\/tictactoe","fileName":"TicTacToe.gwt.xml","dateModified":1304626185550,"fileAuthor":"Alline.Oliveira"},{"filePath":"src\/META-INF","fileName":"jdoconfig.xml","dateModified":1296103865055,"fileAuthor":"Alline.Oliveira"},{"filePath":"test\/tictactoe\/server","fileName":"MovimentJudgmentTest.java","dateModified":1296103865055,"fileAuthor":"Alline.Oliveira","class_package":"tictactoe.server","class_name":"MovimentJudgmentTest","class_description":"Test Class: Judge. Define all the rules to identify the winner of the game.","super_class":"TestCase","class_modifiers":"public","class_tags":[],"class_imports":["junit.framework.TestCase","tictactoe.GameEntityTest","tictactoe.PlayersTest","tictactoe.shared.GameEntity"],"class_constructors":[{"method_name":"MovimentJudgmentTest","method_modifiers":"public","method_return_type":"","method_parameters":"","method_description":""}],"class_methods":[{"method_name":"testCheckForWinner_Loose","method_modifiers":"public","method_return_type":"void","method_parameters":"","method_description":""},{"method_name":"testCheckForWinner_Win","method_modifiers":"public","method_return_type":"void","method_parameters":"","method_description":""}],"class_fields":[],"fileContent":"package tictactoe.server;\n\nimport junit.framework.TestCase;\nimport tictactoe.GameEntityTest;\nimport tictactoe.PlayersTest;\nimport tictactoe.shared.GameEntity;\n\n\/**\n * Test Class: Judge. Define all the rules to identify the winner of the game.\n * \n *\/\npublic class MovimentJudgmentTest extends TestCase {\n\n\tpublic void testCheckForWinner_Loose() {\n\n\t\tint currentMoveRow = 1;\n\n\t\tint currentMoveColumn = 2;\n\n\t\tGameEntity gameEntity = GameEntityTest.returnGameEntity();\n\n\t\tgameEntity.getGameMoves()[currentMoveRow][currentMoveColumn] = PlayersTest\n\t\t\t\t.returnPlayerO();\n\n\t\tGameEntity checkForWinnerTested = MovimentJudgment.checkForWinner(\n\t\t\t\tgameEntity, currentMoveRow, currentMoveColumn);\n\n\t\tassertEquals(checkForWinnerTested, null);\n\t}\n\n\tpublic void testCheckForWinner_Win() {\n\n\t\tGameEntity gameEntity = GameEntityTest.returnGameEntity();\n\n\t\tint currentMoveRow = 2;\n\n\t\tint currentMoveColumn = 2;\n\n\t\tgameEntity.getGameMoves()[currentMoveRow][currentMoveColumn] = PlayersTest\n\t\t\t\t.returnPlayerX();\n\n\t\tGameEntity checkForWinnerTested = MovimentJudgment.checkForWinner(\n\t\t\t\tgameEntity, currentMoveRow, currentMoveColumn);\n\n\t\tassertEquals(checkForWinnerTested, GameEntity.SEQUENCE_DIAGONAL_LEFT);\n\t}\n\n}\n"},{"filePath":"test\/tictactoe\/server","fileName":"GreetingServiceImplTest.java","dateModified":1296103865055,"fileAuthor":"Alline.Oliveira","class_package":"tictactoe.server","class_name":"GreetingServiceImplTest","class_description":"Test Class: GreetingServiceImpl. The server side implementation of the RPC\n service.","super_class":"TestCase","class_modifiers":"public","class_tags":[],"class_imports":["junit.framework.TestCase","tictactoe.shared.GameEntity"],"class_constructors":[{"method_name":"GreetingServiceImplTest","method_modifiers":"public","method_return_type":"","method_parameters":"","method_description":""}],"class_methods":[{"method_name":"testCheckForWinner","method_modifiers":"public","method_return_type":"void","method_parameters":"","method_description":""}],"class_fields":[],"fileContent":"package tictactoe.server;\n\nimport junit.framework.TestCase;\nimport tictactoe.shared.GameEntity;\n\n\/**\n * Test Class: GreetingServiceImpl. The server side implementation of the RPC\n * service.\n * \n *\/\npublic class GreetingServiceImplTest extends TestCase {\n\n\tpublic void testCheckForWinner() {\n\n\t\tGameEntity gameStatus = new GameEntity();\n\n\t\tint currentMoveRow = 2;\n\n\t\tint currentMoveColumn = 1;\n\n\t\tGameEntity checkForWinnerTested = new GreetingServiceImpl()\n\t\t\t\t.checkForWinner(gameStatus, currentMoveRow, currentMoveColumn);\n\n\t\tassertEquals(checkForWinnerTested, null);\n\t}\n\n}\n"},{"filePath":"test\/tictactoe\/authentication\/client","fileName":"LoginTest.java","dateModified":1305226783743,"fileAuthor":"alline.oliveira","class_package":"tictactoe.authentication.client","class_name":"LoginTest","class_description":"Test Class for: Login.\n Form to identify the name and the password of the player.","super_class":"TestCase","class_modifiers":"public","class_tags":[],"class_imports":["junit.framework.TestCase","tictactoe.authentication.client.Login"],"class_constructors":[{"method_name":"LoginTest","method_modifiers":"public","method_return_type":"","method_parameters":"","method_description":""}],"class_methods":[{"method_name":"testLogin","method_modifiers":"public","method_return_type":"void","method_parameters":"","method_description":""}],"class_fields":[],"fileContent":"package tictactoe.authentication.client;\n\nimport junit.framework.TestCase;\nimport tictactoe.authentication.client.Login;\n\n\/**\n * Test Class for: Login.\n * Form to identify the name and the password of the player.\n *\n *\/\npublic class LoginTest extends TestCase {\n\n\tpublic void testLogin() { \n\n\t\t\/\/  LoginTested = new Login().Login();\n\n\t\t\/\/ assertEquals(LoginTested, null);\n\t}\n\n}\n"},{"filePath":"test\/tictactoe","fileName":"GameEntityTest.java","dateModified":1299175446471,"fileAuthor":"Alline.Oliveira","class_package":"tictactoe","class_name":"GameEntityTest","class_description":"","super_class":"java.lang.Object","class_modifiers":"public","class_tags":[],"class_imports":["tictactoe.shared.GameEntity","tictactoe.shared.Player"],"class_constructors":[{"method_name":"GameEntityTest","method_modifiers":"public","method_return_type":"","method_parameters":"","method_description":""}],"class_methods":[{"method_name":"returnGameEntity","method_modifiers":"public static","method_return_type":"GameEntity","method_parameters":"","method_description":""}],"class_fields":[],"fileContent":"package tictactoe;\n\nimport tictactoe.shared.GameEntity;\nimport tictactoe.shared.Player;\n\npublic class GameEntityTest {\n\n\tpublic static GameEntity returnGameEntity() {\n\n\t\tGameEntity gameEntity = new GameEntity();\n\n\t\tPlayer[][] gameStatus = new Player[3][3];\n\n\t\tPlayer playerO = new Player();\n\n\t\tPlayer playerX = new Player();\n\n\t\tplayerO.setPlayerSymbol(Player.PlayerSymbol_O);\n\n\t\tplayerX.setPlayerSymbol(Player.PlayerSymbol_X);\n\n\t\tgameStatus[0][0] = playerX;\n\t\tgameStatus[0][1] = playerO;\n\n\t\tgameStatus[1][1] = playerX;\n\n\t\tgameEntity.setGameMoves(gameStatus);\n\n\t\treturn gameEntity;\n\t}\n\n}\n"},{"filePath":"test\/tictactoe\/client","fileName":"GwtEntryPointTest.java","dateModified":1299177649731,"fileAuthor":"Alline.Oliveira","class_package":"tictactoe.client","class_name":"GwtEntryPointTest","class_description":"Test Class: TicTacToe. Entry point classes define <code>onModuleLoad()<\/code>\n .","super_class":"GWTTestCase","class_modifiers":"public","class_tags":[],"class_imports":["com.google.gwt.junit.client.GWTTestCase"],"class_constructors":[{"method_name":"GwtEntryPointTest","method_modifiers":"public","method_return_type":"","method_parameters":"","method_description":""}],"class_methods":[{"method_name":"getModuleName","method_modifiers":"public","method_return_type":"java.lang.String","method_parameters":"","method_description":""},{"method_name":"testOnModuleLoad","method_modifiers":"public","method_return_type":"void","method_parameters":"","method_description":""}],"class_fields":[],"fileContent":"package tictactoe.client;\n\nimport com.google.gwt.junit.client.GWTTestCase;\n\n\/**\n * Test Class: TicTacToe. Entry point classes define <code>onModuleLoad()<\/code>\n * .\n * \n *\/\npublic class GwtEntryPointTest extends GWTTestCase {\n\n\t@Override\n\tpublic String getModuleName() {\n\n\t\treturn \"tictactoe.TicTacToe\";\n\t}\n\n\tpublic void testOnModuleLoad() {\n\n\t\tnew GwtEntryPoint().onModuleLoad();\n\n\t\tassertTrue(true);\n\t}\n\n}\n"},{"filePath":"test\/tictactoe\/client\/userInterface","fileName":"GameGridTest.java","dateModified":1304626171483,"fileAuthor":"Alline.Oliveira","class_package":"tictactoe.client.userInterface","class_name":"GameGridTest","class_description":"Test Class for: GameGrid. A grid of 3 x 3 cells in wich the players insert\n marks to indicate their desired moviments.","super_class":"GWTTestCase","class_modifiers":"public","class_tags":[],"class_imports":["com.google.gwt.junit.client.GWTTestCase"],"class_constructors":[{"method_name":"GameGridTest","method_modifiers":"public","method_return_type":"","method_parameters":"","method_description":""}],"class_methods":[{"method_name":"testGameGrid","method_modifiers":"public","method_return_type":"void","method_parameters":"","method_description":""},{"method_name":"getModuleName","method_modifiers":"public","method_return_type":"java.lang.String","method_parameters":"","method_description":""}],"class_fields":[],"fileContent":"package tictactoe.client.userInterface;\n\nimport com.google.gwt.junit.client.GWTTestCase;\n\n\/**\n * Test Class for: GameGrid. A grid of 3 x 3 cells in wich the players insert\n * marks to indicate their desired moviments.\n * \n *\/\npublic class GameGridTest extends GWTTestCase {\n\n\tpublic void testGameGrid() {\n\n\t\t\/\/ new GameGrid();\n\n\t\tassertTrue(true);\n\t}\n\n\t@Override\n\tpublic String getModuleName() {\n\n\t\treturn null;\n\t}\n\n}\n"},{"filePath":"test\/tictactoe\/client\/userInterface","fileName":"PlayerMoveTest.java","dateModified":1304626171483,"fileAuthor":"Alline.Oliveira","class_package":"tictactoe.client.userInterface","class_name":"PlayerMoveTest","class_description":"Test Class for: PlayerMove. Performs a move in the game.","super_class":"GWTTestCase","class_modifiers":"public","class_tags":[],"class_imports":["com.google.gwt.junit.client.GWTTestCase"],"class_constructors":[{"method_name":"PlayerMoveTest","method_modifiers":"public","method_return_type":"","method_parameters":"","method_description":""}],"class_methods":[{"method_name":"testPlayerMove","method_modifiers":"public","method_return_type":"void","method_parameters":"","method_description":""},{"method_name":"testMakeMove","method_modifiers":"public","method_return_type":"void","method_parameters":"","method_description":"Test Method: makeMove. When the player clicks in a cell, the game draws\n an O or a X on the game grid depending on which player's turn it is."},{"method_name":"testToggleCurrentPlayer","method_modifiers":"public","method_return_type":"void","method_parameters":"","method_description":""},{"method_name":"getModuleName","method_modifiers":"public","method_return_type":"java.lang.String","method_parameters":"","method_description":""}],"class_fields":[],"fileContent":"package tictactoe.client.userInterface;\n\nimport com.google.gwt.junit.client.GWTTestCase;\n\n\/**\n * Test Class for: PlayerMove. Performs a move in the game.\n * \n *\/\npublic class PlayerMoveTest extends GWTTestCase {\n\n\tpublic void testPlayerMove() {\n\n\t\t\/\/ new PlayerMove();\n\n\t\tassertTrue(true);\n\t}\n\n\t\/**\n\t * Test Method: makeMove. When the player clicks in a cell, the game draws\n\t * an O or a X on the game grid depending on which player's turn it is.\n\t * \n\t *\/\n\tpublic void testMakeMove() {\n\n\t\t\/\/ GameGrid gameGrid;\n\n\t\t\/\/ HTMLTable.Cell cell;\n\n\t\t\/\/ PlayerMove.makeMove(gameGrid,cell);\n\n\t\tassertTrue(true);\n\t}\n\n\tpublic void testToggleCurrentPlayer() {\n\n\t\t\/\/ PlayerMove.toggleCurrentPlayer();\n\n\t\tassertTrue(true);\n\t}\n\n\t@Override\n\tpublic String getModuleName() {\n\n\t\treturn null;\n\t}\n\n}\n"},{"filePath":"test\/tictactoe\/client\/userInterface","fileName":"GameBoardTest.java","dateModified":1304626171483,"fileAuthor":"Alline.Oliveira","class_package":"tictactoe.client.userInterface","class_name":"GameBoardTest","class_description":"Test Class for: GameBoard. The web page where the game is shown. Accommodates\n the game grid and also some options such as a restart button, help, game\n score, game status, ...","super_class":"GWTTestCase","class_modifiers":"public","class_tags":[],"class_imports":["com.google.gwt.junit.client.GWTTestCase"],"class_constructors":[{"method_name":"GameBoardTest","method_modifiers":"public","method_return_type":"","method_parameters":"","method_description":""}],"class_methods":[{"method_name":"testGameBoard","method_modifiers":"public","method_return_type":"void","method_parameters":"","method_description":""},{"method_name":"getModuleName","method_modifiers":"public","method_return_type":"java.lang.String","method_parameters":"","method_description":""}],"class_fields":[],"fileContent":"package tictactoe.client.userInterface;\n\nimport com.google.gwt.junit.client.GWTTestCase;\n\n\/**\n * Test Class for: GameBoard. The web page where the game is shown. Accommodates\n * the game grid and also some options such as a restart button, help, game\n * score, game status, ...\n * \n *\/\npublic class GameBoardTest extends GWTTestCase {\n\n\tpublic void testGameBoard() {\n\n\t\t\/\/ new GameBoard();\n\n\t\tassertTrue(true);\n\t}\n\n\t@Override\n\tpublic String getModuleName() {\n\n\t\treturn null;\n\t}\n\n}\n"},{"filePath":"test\/tictactoe","fileName":"PlayersTest.java","dateModified":1299175446471,"fileAuthor":"Alline.Oliveira","class_package":"tictactoe","class_name":"PlayersTest","class_description":"","super_class":"java.lang.Object","class_modifiers":"public","class_tags":[],"class_imports":["tictactoe.shared.Player"],"class_constructors":[{"method_name":"PlayersTest","method_modifiers":"public","method_return_type":"","method_parameters":"","method_description":""}],"class_methods":[{"method_name":"returnPlayerO","method_modifiers":"public static","method_return_type":"Player","method_parameters":"","method_description":""},{"method_name":"returnPlayerX","method_modifiers":"public static","method_return_type":"Player","method_parameters":"","method_description":""}],"class_fields":[{"field_name":"playerO","field_type":"Player"},{"field_name":"playerX","field_type":"Player"}],"fileContent":"package tictactoe;\n\nimport tictactoe.shared.Player;\n\npublic class PlayersTest {\n\n\tpublic static Player playerO = new Player();\n\n\tpublic static Player playerX = new Player();\n\n\tpublic static Player returnPlayerO() {\n\n\t\tplayerO.setPlayerSymbol(Player.PlayerSymbol_O);\n\n\t\treturn playerO;\n\t}\n\n\tpublic static Player returnPlayerX() {\n\n\t\tplayerX.setPlayerSymbol(Player.PlayerSymbol_X);\n\n\t\treturn playerX;\n\t}\n\n}\n"},{"filePath":"war\/files","fileName":"TicTacToe_Specification.xml","dateModified":1301541707030,"fileAuthor":"Alline.Oliveira"},{"filePath":"war\/WEB-INF","fileName":"web.xml","dateModified":1308248124491,"fileAuthor":"Alline.Oliveira"},{"filePath":"war\/WEB-INF","fileName":"logging.properties","dateModified":1296103865055,"fileAuthor":"Alline.Oliveira"},{"filePath":"war\/WEB-INF","fileName":"appengine-web.xml","dateModified":1299175478637,"fileAuthor":"Alline.Oliveira"},{"filePath":"war\/WEB-INF\/lib","fileName":"datanucleus-core-1.1.5.jar","dateModified":1296103865055,"fileAuthor":"Alline.Oliveira"},{"filePath":"war\/WEB-INF\/lib","fileName":"datanucleus-jpa-1.1.5.jar","dateModified":1296103865055,"fileAuthor":"Alline.Oliveira"},{"filePath":"war\/WEB-INF\/lib","fileName":"jdo2-api-2.3-eb.jar","dateModified":1296103865055,"fileAuthor":"Alline.Oliveira"},{"filePath":"war\/WEB-INF\/lib","fileName":"appengine-api-labs-1.4.3.jar","dateModified":1304625891465,"fileAuthor":"Alline.Oliveira"},{"filePath":"war\/WEB-INF\/lib","fileName":"datanucleus-appengine-1.0.8.final.jar","dateModified":1296103865055,"fileAuthor":"Alline.Oliveira"},{"filePath":"war\/WEB-INF\/lib","fileName":"geronimo-jpa_3.0_spec-1.1.1.jar","dateModified":1296103865055,"fileAuthor":"Alline.Oliveira"},{"filePath":"war\/WEB-INF\/lib","fileName":"appengine-jsr107cache-1.4.3.jar","dateModified":1304625891465,"fileAuthor":"Alline.Oliveira"},{"filePath":"war\/WEB-INF\/lib","fileName":"jsr107cache-1.1.jar","dateModified":1296103865055,"fileAuthor":"Alline.Oliveira"},{"filePath":"war\/WEB-INF\/lib","fileName":"helpAgile.jar","dateModified":1299176001917,"fileAuthor":"Alline.Oliveira"},{"filePath":"war\/WEB-INF\/lib","fileName":"gwt-servlet.jar","dateModified":1298497309553,"fileAuthor":"Alline.Oliveira"},{"filePath":"war\/WEB-INF\/lib","fileName":"geronimo-jta_1.1_spec-1.1.1.jar","dateModified":1296103865055,"fileAuthor":"Alline.Oliveira"},{"filePath":"war\/WEB-INF\/lib","fileName":"appengine-api-1.0-sdk-1.4.3.jar","dateModified":1304625891465,"fileAuthor":"Alline.Oliveira"},{"filePath":"war","fileName":"TicTacToeStyles.css","dateModified":1308247961675,"fileAuthor":"Alline.Oliveira"},{"filePath":"war\/images","fileName":"TicTacToe4j.jpg","dateModified":1308248042622,"fileAuthor":"Alline.Oliveira"},{"filePath":"war\/images","fileName":"help.jpg","dateModified":1296103865055,"fileAuthor":"Alline.Oliveira"},{"filePath":"war","fileName":"TicTacToeHome.html","dateModified":1308247961675,"fileAuthor":"Alline.Oliveira"},{"filePath":"war","fileName":"favicon.ico","dateModified":1308247961675,"fileAuthor":"Alline.Oliveira"}]